name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-deb:
    name: Build DEB Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dotnet-deb-tool
        run: dotnet tool install --global dotnet-deb

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Build DEB (Linux)
        run: dotnet deb -c Release -r linux-x64 -o publish
      
      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImagoCrafter.deb
          path: publish/*.deb

  build-rpm:
    name: Build RPM Package
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - uses: actions/checkout@v3

      - name: Install .NET
        run: |
          dnf install -y dotnet-sdk-8.0
          dnf install -y findutils
      
      - name: Install dotnet-rpm-tool
        run: dotnet tool install --global dotnet-rpm

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Build RPM (Linux)
        run: dotnet rpm -c Release -r linux-x64 -o publish
      
      - name: Upload RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImagoCrafter.rpm
          path: publish/*.rpm

  build-windows:
    name: Build Windows EXE
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build Windows EXE
        run: dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o publish

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImagoCrafter.exe
          path: publish/*.exe

  build-macos:
    name: Build macOS DMG
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build DMG (macOS)
        run: |
          dotnet publish -c Release -r osx-x64 --self-contained true -p:PublishSingleFile=true -o publish
          npm install -g create-dmg
          create-dmg publish/ImagoCrafter osx-dmg

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImagoCrafter.dmg
          path: osx-dmg/*.dmg

  release:
    name: Create Release
    needs: [build-deb, build-rpm, build-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List files
        run: find . -type f | sort

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ImagoCrafter v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            ImagoCrafter.exe/*.exe
            ImagoCrafter.deb/*.deb
            ImagoCrafter.dmg/*.dmg
            ImagoCrafter.rpm/*.rpm